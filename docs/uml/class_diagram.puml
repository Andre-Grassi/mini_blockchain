@startuml class_diagram 
skinparam classAttributeIconSize 0
hide circle
skinparam Shadowing false

class Block {
  #balance: float {readonly}
  #hash: String {readonly}
}

class GenesisBlock {
  -ownerName: String {readonly}
  -creationTime: Time {readonly}
}

Block <|-- GenesisBlock


class Client {
  -socket: Socket {readonly}
  -bufferSize: unsigned int {readonly}
  -name: String {readonly}
  -balance: float
  -deposit(amount: float)
  -withdraw(amount: float)
}

class Server {
  ' A segunda string é o nome do cliente
  -socket: Socket {readonly}
  -bufferSize: unsigned int {readonly}
  -ip: String {readonly}
  -port: int {readonly}
  -clients: map(String, String) {readonly}
  -getOwnIP(): String
  -deposit(amount: float)
  -withdraw(amount: float)
  -calculateHash(block: Block): String
' A validação só é feita pelo servidor
  -validateWithdrawal(amount: float, ownerName: float)
  -getBalance(clientName: String): float
}

' BlockChain
Server *--> "many" Block

' O Server tem um atributo que mapeia por string os clientes map(String) = NomeCliente
Server "1"--"many" Client 
@enduml